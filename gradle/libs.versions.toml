[versions]
nvaCommons = { strictly = '1.25.18' }
# require awsSdk because of xraySdk using version 1.11.1000 and us using newer version.
#awsSdk = { require = "1.11.1000" }
awsSdk2 = { strictly = '2.17.191' }
jackson = { strictly = "2.13.3" }
xraySdk = { strictly = '2.9.1' }
dynamoDbLocal = { strictly = '1.17.2' }
zalandoProblem = { strictly = '0.27.1' }
awsLambdaCore = { strictly = '1.2.1' }
jupiter = { strictly = "5.8.1" }
slf4j = { strictly = '1.8.0-beta4' }
apacheHttpClient = { strictly = '4.5.13' }
hamcrest = { strictly = '2.2' }
javersCore = { strictly = '6.2.5' }
javafaker = { strictly = '1.0.2' }
mockitoCore = { strictly = '3.12.4' }
apiGuardian = { strictly = '1.1.2' }
guava = { strictly = '31.1-jre' }
hamcrestJackson = { strictly = '1.2.0' }
log4j = { strictly = '2.17.2' }
awsLambdaEvents = { strictly = '3.11.0' }
wiremock = { strictly = '2.33.2' }

[libraries]
nva-core = { group = 'com.github.bibsysdev', name = 'core', version.ref = 'nvaCommons' }
nva-json = { group = 'com.github.bibsysdev', name = 'json', version.ref = 'nvaCommons' }
nva-apigateway = { group = 'com.github.bibsysdev', name = 'apigateway', version.ref = 'nvaCommons' }

nva-lambdaauthorizer = { group = 'com.github.bibsysdev', name = 'lambdaauthorizer', version.ref = 'nvaCommons' }
nva-secrets = { group = 'com.github.bibsysdev', name = 'secrets', version.ref = 'nvaCommons' }
nva-events = { group = 'com.github.bibsysdev', name = 'eventhandlers', version.ref = 'nvaCommons' }
nva-auth = { group = 'com.github.bibsysdev', name = 'auth', version.ref = 'nvaCommons' }
nva-testutils = { group = 'com.github.bibsysdev', name = 'nvatestutils', version.ref = 'nvaCommons' }

#aws-xray-recorder-sdk-core = { group = 'com.amazonaws', name = 'aws-xray-recorder-sdk-core', version.ref = 'xraySdk' }
#aws-xray-recorder-sdk-aws-sdk = { group = 'com.amazonaws', name = 'aws-xray-recorder-sdk-aws-sdk', version.ref = 'xraySdk' }
#aws-xray-recorder-sdk-aws-sdk-instrumentor = { group = 'com.amazonaws', name = 'aws-xray-recorder-sdk-aws-sdk-instrumentor', version.ref = 'xraySdk' }

aws-lambda-java-core = { group = 'com.amazonaws', name = 'aws-lambda-java-core', version.ref = 'awsLambdaCore' }

aws-core = { group = 'software.amazon.awssdk', name = 'aws-core', version.ref = 'awsSdk2' }
aws-auth = { group = 'software.amazon.awssdk', name = 'auth', version.ref = 'awsSdk2' }
aws-regions = { group = 'software.amazon.awssdk', name = 'regions', version.ref = 'awsSdk2' }
aws-sdk2-core = { group = 'software.amazon.awssdk', name = 'sdk-core', version.ref = 'awsSdk2' }
aws-lambda-events = { group = 'com.amazonaws', name = 'aws-lambda-java-events', version.ref = 'awsLambdaEvents' }
aws-sdk2-secrets = { group = 'software.amazon.awssdk', name = 'secretsmanager', version.ref = 'awsSdk2' }
aws-sdk2-dynamodb = { group = 'software.amazon.awssdk', name = 'dynamodb', version.ref = 'awsSdk2' }
aws-sdk2-dynamodbenhanced = { group = 'software.amazon.awssdk', name = 'dynamodb-enhanced', version.ref = 'awsSdk2' }
aws-sdk2-urlconnection = { group = 'software.amazon.awssdk', name = 'url-connection-client', version.ref = 'awsSdk2' }
aws-sdk2-eventbridge = { group = 'software.amazon.awssdk', name = 'eventbridge', version.ref = 'awsSdk2' }
aws-java-sdk2-cognitoidp = { group = 'software.amazon.awssdk', name = 'cognitoidentityprovider', version.ref = 'awsSdk2' }
aws-http-client-spi = { group = 'software.amazon.awssdk', name = 'http-client-spi', version.ref = 'awsSdk2' }

jackson-core = { group = 'com.fasterxml.jackson.core', name = 'jackson-core', version.ref = 'jackson' }
jackson-datatype-jdk8 = { group = 'com.fasterxml.jackson.datatype', name = 'jackson-datatype-jdk8', version.ref = 'jackson' }
jackson-datatype-jsr310 = { group = 'com.fasterxml.jackson.datatype', name = 'jackson-datatype-jsr310', version.ref = 'jackson' }
jackson-databind = { group = 'com.fasterxml.jackson.core', name = 'jackson-databind', version.ref = 'jackson' }
jackson-annotations = { group = 'com.fasterxml.jackson.core', name = 'jackson-annotations', version.ref = 'jackson' }
jackson-module-parameter-names = { group = 'com.fasterxml.jackson.module', name = 'jackson-module-parameter-names', version.ref = 'jackson' }
jackson-datatype-problem = { group = 'org.zalando', name = 'jackson-datatype-problem', version.ref = 'zalandoProblem' }
jackson-dataformat-xml = { group = 'com.fasterxml.jackson.dataformat', name = 'jackson-dataformat-xml', version.ref = 'jackson' }


slf4j = { group = 'org.slf4j', name = 'slf4j-api', version.ref = 'slf4j' }
log4j-core = { group = 'org.apache.logging.log4j', name = 'log4j-core', version.ref = 'log4j' }
log4j-api = { group = 'org.apache.logging.log4j', name = 'log4j-api', version.ref = 'log4j' }
log4j-slf4j18-impl = { group = 'org.apache.logging.log4j', name = 'log4j-slf4j18-impl', version.ref = 'log4j' }


apache-httpclient = { group = 'org.apache.httpcomponents', name = 'httpclient', version.ref = 'apacheHttpClient' }
zalando-problem = { group = 'org.zalando', name = 'problem', version.ref = 'zalandoProblem' }

junit-jupiter-engine = { group = 'org.junit.jupiter', name = 'junit-jupiter-engine', version.ref = 'jupiter' }
junit-jupiter-api = { group = 'org.junit.jupiter', name = 'junit-jupiter-api', version.ref = 'jupiter' }
junit-jupiter-params = { group = 'org.junit.jupiter', name = 'junit-jupiter-params', version.ref = 'jupiter' }
mockito-core = { group = 'org.mockito', name = 'mockito-core', version.ref = 'mockitoCore' }
javers-core = { group = 'org.javers', name = 'javers-core', version.ref = 'javersCore' }
hamcrest = { group = 'org.hamcrest', name = 'hamcrest', version.ref = 'hamcrest' }
javafaker = { group = 'com.github.javafaker', name = 'javafaker', version.ref = 'javafaker' }
dynamoDbLocal = { group = 'com.amazonaws', name = 'DynamoDBLocal', version.ref = 'dynamoDbLocal' }
nva-logutils = { group = 'com.github.bibsysdev', name = 'logutils', version.ref = 'nvaCommons' }
hamcrest-jackson = { group = 'com.spotify', name = 'hamcrest-jackson', version.ref = 'hamcrestJackson' }

wiremock = { group = 'com.github.tomakehurst', name = 'wiremock-jre8', version.ref = 'wiremock' }

apiguardian-api = { group = 'org.apiguardian', name = 'apiguardian-api', version.ref = 'apiGuardian' }
guava = { group = 'com.google.guava', name = 'guava', version.ref = 'guava' }

[bundles]
logging = ['log4j-core', 'log4j-api', 'slf4j', 'log4j-slf4j18-impl']
testing = ['junit-jupiter-engine', 'junit-jupiter-api', 'junit-jupiter-params', 'mockito-core',
    'javers-core', 'hamcrest', 'javafaker', 'nva-testutils', 'nva-logutils',
    'hamcrest-jackson', 'wiremock'
]
#aws-xray = ['aws-xray-recorder-sdk-core', 'aws-xray-recorder-sdk-aws-sdk', 'aws-xray-recorder-sdk-aws-sdk-instrumentor']
aws-lambda = ['aws-lambda-java-core', 'zalando-problem', 'aws-lambda-events']
jackson = ['jackson-core', 'jackson-datatype-jdk8', 'jackson-datatype-jsr310', 'jackson-databind',
    'jackson-annotations', 'jackson-module-parameter-names', 'jackson-datatype-problem', 'jackson-dataformat-xml']
