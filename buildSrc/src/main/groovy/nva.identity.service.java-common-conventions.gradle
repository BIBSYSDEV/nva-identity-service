plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco-report-aggregation'
//    id 'test-report-aggregation'
}


group = 'com.github.bibsysdev'

dependencies {
    testImplementation libs.bundles.testing
    testImplementation libs.junit.jupiter.api
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //To support dynamodb local when testing, using mac m1
    if (System.getProperty("os.arch") == "aarch64") {
        testImplementation group: 'io.github.ganadist.sqlite4java', name: 'libsqlite4java-osx-aarch64', version: '1.0.392'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://s3.eu-central-1.amazonaws.com/dynamodb-local-frankfurt/release" }
}

tasks.named('test') {
    useJUnitPlatform {
        excludeTags("RemoteTest")
    }
    failFast = true
    testLogging {
        events 'skipped', 'passed', 'failed'
    }
}

pmd {
    toolVersion = "6.55.0"
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
}

checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
}
tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required
        html.required
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}


check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn(jacocoTestReport)

jacocoTestCoverageVerification {

    violationRules {
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 1.000
            }
        }

        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.000
            }
        }
    }
}
